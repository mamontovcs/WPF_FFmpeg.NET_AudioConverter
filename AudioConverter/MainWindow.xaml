<Window x:Class="AudioConverter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:AudioConverter.MVVM"
        mc:Ignorable="d"
        Title="AudioConverter" Height="200" Width="800">

    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>

        <local:BooleansToBooleanConverter x:Key="boleansToBooleanConverter" />

        <Style x:Key="BaseControlStyle" TargetType="Control">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="TextBoxBaseStyle" TargetType="Control" BasedOn="{StaticResource BaseControlStyle}">
            <Setter Property="Height" Value="21" />
            <Setter Property="Width" Value="250" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="ButtonBaseStyle" TargetType="Button" BasedOn="{StaticResource BaseControlStyle}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Width" Value="70"/>
        </Style>

        <Style TargetType="Label" BasedOn="{StaticResource BaseControlStyle}">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style TargetType="StackPanel" >
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Orientation" Value="Horizontal"></Setter>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}" />

        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}" />

        <Style TargetType="ComboBox" BasedOn="{StaticResource BaseControlStyle}" >
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Width" Value="100"></Setter>
        </Style>

        <Style TargetType="CheckBox" BasedOn="{StaticResource BaseControlStyle}" >
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Margin" Value="10"></Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="30*"></RowDefinition>
            <RowDefinition Height="40*"></RowDefinition>
            <RowDefinition Height="30*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60*"></ColumnDefinition>
            <ColumnDefinition Width="40*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" >

            <Label Content="Input File "  />
            <TextBox Name="OpenDialogForInputFileCommandTextBox" IsReadOnly="True" Text="{Binding Path=FileNames}"/>
            <Button Content="Browse" 
                    Command="{Binding OpenDialogForInputFileCommand}"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="0" HorizontalAlignment="Right" >

            <Label Content="Output File Directory"/>
            <TextBox Name="FilePathForOutputFileTextBox" IsReadOnly="True" Text="{Binding Path=FilePathForOutputFile}"/>
            <Button Content="Browse" 
                    Command="{Binding OpenDialogForOutputDirectory}"/>
        </StackPanel>


        <StackPanel Grid.Row="0" Grid.Column="1">

            <Label Content="Convert to"/>
            <ComboBox ItemsSource="{Binding AudioFormats}"
                  SelectedValue="{Binding SelectedFormatValue}"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center">
            <Label Content="Change bit rate"/>
            <CheckBox Name="IsChangeBitRateCheckBox" IsChecked="{Binding IsChangeBitRate}"></CheckBox>
            <TextBox Width="70" Name = "BitRateTextBox"
                             Grid.Column="1"
                             IsEnabled="{Binding IsChangeBitRate, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
                <TextBox.Text>
                    <Binding Path = "AudioBitRate"
                                     Mode="TwoWay" 
                                     UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NumericTextBoxValidatior ValidationStep = "ConvertedProposedValue"
                                                         ValidatesOnTargetUpdated="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="1">

            <Button Content="Convert" 
                    Command="{Binding RunConversionCommand}">

                <Button.IsEnabled>
                    <MultiBinding Converter="{ StaticResource boleansToBooleanConverter}" Mode="TwoWay">
                        <Binding ElementName="BitRateTextBox" Path="(Validation.HasError)" />
                        <Binding ElementName="CutToTextBox" Path="(Validation.HasError)" />
                        <Binding ElementName="CutFromTextBox" Path="(Validation.HasError)" />
                        <Binding ElementName="FilePathForOutputFileTextBox" Path="Text.IsEmpty" />
                        <Binding ElementName="OpenDialogForInputFileCommandTextBox" Path="Text.IsEmpty" />
                        
                    </MultiBinding>
                </Button.IsEnabled>

            </Button>

        </StackPanel>

        <StackPanel Grid.Row="2" Grid.Column="0">

            <Label Content="Cut audio"/>
            <CheckBox  IsChecked="{Binding IsCutAudio}"></CheckBox>

            <Label Content="From"/>
            <TextBox Name="CutFromTextBox" Width="70" 
                             IsEnabled="{Binding IsCutAudio, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
                <TextBox.Text>
                    <Binding Path = "CutFrom"
                                     Mode="TwoWay" 
                                     UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NumericTextBoxValidatior ValidationStep = "ConvertedProposedValue"
                                                         ValidatesOnTargetUpdated="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

            <Label Content="To"/>

            <TextBox Name="CutToTextBox" Width="70" 
                             IsEnabled="{Binding IsCutAudio, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" >
                <TextBox.Text>
                    <Binding Path = "CutTo"
                                     Mode="TwoWay" 
                                     UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:NumericTextBoxValidatior ValidationStep = "ConvertedProposedValue"
                                                         ValidatesOnTargetUpdated="False"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>

        </StackPanel>
    </Grid>
</Window>
